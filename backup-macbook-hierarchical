#!/usr/local/bin/bash

# Brent's rsync backup script
# 1. Check if drive is mounted (log time + error)
# 2. Check if folder exists on drive (log time + error)
# 3. Check if folder is writable (Log time + backup starting or log time + error)
# 4. Check if process is already running (log time + error)
# 5. run rsync (log only time + errors OR time + compelte)
# 6. log difference in times (Log Time + Backup Complete)

# ! -h '/Volumes/Storage 4TB'
# echo "$begin 'Back up drive detected. Starting Backup...'" >> $log
# begin=$(date '+%Y-%m-%d %H:%M:%S')
# rsync -zaPh --stats --log-file="$HOME/Config/Logs/rSync.log" --exclude={'.DS_Store','.Trashes','.Trash','.Spotlight-V100','.fseventsd'} ~/ '/Volumes/Storage 4TB/Backups/MacOS/Heirarchical'

log="/Users/Brent/Config/Logs/macbook-backup.log"
args="-aPq --stats"
exclude="'.DS_Store','.Trashes','.Trash','.Spotlight-V100','.fseventsd'"
backup_drive="/Volumes/Storage 4TB"
backup_folder="Backups/MacOS/Heirarchical"
source="~/"
target="$backupdrive/$backup_folder"
begin=$(date '+%Y-%m-%d %H:%M:%S')

# Group as a list of commands
{
  # 1. Check if drive is mounted (log time + error)
  mount | grep "on $backup_drive" > /dev/null  || (echo "$begin - Backup Canceled: $backup_drive is not mounted" && exit 0)

  #2. Check if folder exists on drive (log time + error)
  if [[ ! -d  $target ]]; then echo "$begin - Backup Canceled: $target does not exist" && exit 0;fi

  # 3. Check if folder is writable (Log time + backup starting or log time + error)
  if [ ! -w "/path/to/dir" ]; then echo "$begin - Backup Canceled: $target is not writable" && exit 0; fi

  # 4. Check if process is already running (log time + error)
  dupe_script=$(ps -ef | grep "macoook-backup-hierarchical.sh" | grep -v grep | wc -l)
  if [ ${dupe_script} -gt 3 ]; then echo "$begin - Backup Canceled: Process is already running." && exit 0; fi

  # 5. run rsync (log only time + errors OR time + compelte)
  echo "$begin  -  Backup to $target is Starting"

  # 6. log difference in times (Log Time + Backup Complete)
  end=$(date '+%Y-%m-%d %H:%M:%S')
}


# if   (mount | grep "on $backup_drive" > /dev/null) ; then
#   echo "$begin - $backup_drive is mounted"
# else
#   echo "$begin - Backup Canceled: $backup_drivesw is not mounted"
# fi


# if [[  -d '/Volumes/Storage 4TB' && ! -h '/Volumes/Storage 4TB'  ]]; then
